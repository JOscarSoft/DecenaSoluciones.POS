@using DecenaSoluciones.POS.Shared.Dtos;
@using System.Globalization;

@inject NavigationManager navegation;

<div style="margin-top:25px">
    <Grid @ref="salesGrid" TItem="SalesViewModel"
          Class="table table-hover"
          HeaderRowCssClass="bg-dark text-white border-bottom-0 headerRow"
          Data="salesList"
          AllowFiltering="true"
          AllowPaging="true"
          PageSize="50"
          AllowSorting="true"
          AllowSelection="false"
          Responsive="true"
          PageSizeSelectorVisible="true"
          ItemsPerPageText="Registros por página"
          PageSizeSelectorItems="new int[] { 10, 20, 50, 100 }"
          PaginationItemsTextFormat="{0} - {1} de {2} registros"
          EmptyText="No se encontraron registros para mostrar"
          AllowRowClick="true"
          OnRowClick="OnRowClick"
          RowClass="GetRowClass">
        <GridColumn TItem="SalesViewModel" HeaderText="Código" PropertyName="Code" SortKeySelector="item => item.Code" >
            @context.Code
        </GridColumn>
        <GridColumn TItem="SalesViewModel" HeaderText="Total" PropertyName="Total" SortKeySelector="item => item.Total" >
            @(context.Total != null ? context.Total?.ToString("C2", CultureInfo.CreateSpecificCulture("en-US")) : "0.00")
        </GridColumn>
        <GridColumn TItem="SalesViewModel" HeaderText="Usuario" PropertyName="UserName" Sortable="true" SortKeySelector="item => item.UserName">
            @context.UserName
        </GridColumn>
        <GridColumn TItem="SalesViewModel" HeaderText="Fecha" PropertyName="CreationDate" Sortable="true" SortKeySelector="item => item.CreationDate" SortDirection="SortDirection.Descending" IsDefaultSortColumn="true">
            @context.CreationDate.ToString("dd/MM/yyyy hh:mm tt")
        </GridColumn>
        <GridColumn TItem="SalesViewModel" HeaderText="Cliente" PropertyName="CustomerName" SortKeySelector="item => item.CustomerName">
            @context.CustomerName
        </GridColumn>
    </Grid>
</div>

@code {

    [Parameter] public List<SalesViewModel> salesList { get; set; } = default!;
    [Parameter] public int quotations { get; set; } = 0;
    Grid<SalesViewModel> salesGrid = default!;
    string salesUrl = "/newsale";

    private void OnRowClick(GridRowEventArgs<SalesViewModel> args)
    {
        navegation.NavigateTo($"{salesUrl}/{args.Item.Id}/{quotations}");
    }

    private string GetRowClass(SalesViewModel sale)
    {
        if (!sale.IsAQuotation && sale.Dismissed)
            return "table-secondary";

        return string.Empty;
    }

}
