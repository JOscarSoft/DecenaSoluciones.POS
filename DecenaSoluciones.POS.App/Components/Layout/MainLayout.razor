@using BlazorBootstrap
@using DecenaSoluciones.POS.Shared.Dtos;
@using DecenaSoluciones.POS.App.Extensions;
@using DecenaSoluciones.POS.App.Components.Pages;
@* @using DecenaSoluciones.POS.App.Pages.Components; *@
@using Microsoft.AspNetCore.Components.Authorization;
@using DecenaSoluciones.POS.Shared.Extensions;
@inherits LayoutComponentBase

@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager

<div class="bb-page">
    <style>
        :root {
            --bb-sidebar-width: 300px;
            --bb-sidebar-collapsed-width: 50px;
            --bb-sidebar-background-color: #fff;
            --bb-sidebar-top-row-background-color: rgba(0,0,0,0.08);
            --bb-sidebar-top-row-border-color: rgb(194,192,192);
            --bb-sidebar-title-text-color: #000080;
            --bb-sidebar-brand-icon-color: #6f42c1;
            --bb-sidebar-brand-image-width: 35px;
            --bb-sidebar-brand-image-height: 35px;
            --bb-sidebar-title-badge-text-color: rgb(255,255,255);
            --bb-sidebar-title-badge-background-color: rgba(25,135,84,var(--bs-bg-opacity,1));
            --bb-sidebar-navbar-toggler-icon-color: rgb(0,0,0);
            --bb-sidebar-navbar-toggler-background-color: rgba(0,0,0,0.08);
            --bb-sidebar-content-border-color: rgb(194,192,192);
            --bb-sidebar-nav-item-text-color: #000080;
            --bb-sidebar-nav-item-text-active-color-rgb: 0,0,0;
            --bb-sidebar-nav-item-text-hover-color: #fff;
            --bb-sidebar-nav-item-text-active-color: #fff;
            --bb-sidebar-nav-item-background-hover-color: #000080;
            --bb-sidebar-nav-item-group-background-color: rgba(0,0,0,0.08);
        }
    </style>
    <main>
        <AuthorizeView>
            <div class="sidebar">
                <NavMenu UserName="@context.User.Identity!.Name" OnLogout="CerrarSesion" OnChangePassword="(() => ShowChangePasswordModal(context.User.Identity?.Name ?? string.Empty))" />
            </div>
        </AuthorizeView>

        <article class="content px-4">
            <div class="py-2">
                @Body
            </div>
        </article>
    </main>

</div>


<Modal @ref="changePasswordModal" UseStaticBackdrop="true" Size="ModalSize.Regular" />

@code {
    private Modal changePasswordModal = default!;

    private async Task ShowChangePasswordModal(string userName)
    {
        var parameters = new Dictionary<string, object>();
        parameters.Add("userName", userName);
        parameters.Add("OnClose", EventCallback.Factory.Create<MouseEventArgs>(this, HideChangePasswordModal));
        //await changePasswordModal.ShowAsync<ChangePasswordComponent>(title: $"Actualizar Contraseña - {userName}", parameters: parameters);
    }

    private async Task HideChangePasswordModal(MouseEventArgs e)
    {
        await changePasswordModal.HideAsync();
    }

    private async Task CerrarSesion()
    {
        var autenticacionExt = (AuthExtension)autenticacionProvider;
        await autenticacionExt.UpdateSessionState(string.Empty);
        navManager.NavigateTo("/Login", true);
    }
}

<Preload />